{"version":3,"sources":["../../src/ens/index.js"],"names":["debug","require","resolve","nameOrNode","opts","provider","isName","includes","sendAsync","send","ens","ENS","lookup","resolveAddressForNode","registryAddress","name"],"mappings":";;;;;;;;;;AAAA;;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,YAAjB,CAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,OAAT,CAAkBC,UAAlB,EAA8BC,IAAI,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAArC,EAAuD;AAC5D,QAAMC,MAAM,GAAGH,UAAU,CAACI,QAAX,CAAoB,GAApB,CAAf,CAD4D,CAG5D;;AACA,MAAI,CAACH,IAAI,CAACC,QAAL,CAAcG,SAAnB,EAA8B;AAC5BJ,IAAAA,IAAI,CAACC,QAAL,CAAcG,SAAd,GAA0BJ,IAAI,CAACC,QAAL,CAAcI,IAAxC;AACD;;AAED,QAAMC,GAAG,GAAG,IAAIC,iBAAJ,CAAQP,IAAR,CAAZ;;AACA,MAAIE,MAAJ,EAAY;AACVN,IAAAA,KAAK,CAAE,uBAAsBG,UAAW,EAAnC,CAAL;AACA,WAAOO,GAAG,CAACE,MAAJ,CAAWT,UAAX,CAAP;AACD;;AAEDH,EAAAA,KAAK,CAAE,uBAAsBG,UAAW,EAAnC,CAAL;AACA,SAAOO,GAAG,CAACG,qBAAJ,CAA0BV,UAA1B,CAAP;AACD;;AAEc,kBAAUE,QAAV,EAAoBS,eAApB,EAAqC;AAClD,SAAO;AACLZ,IAAAA,OAAO,EAAGa,IAAD,IAAUb,OAAO,CAACa,IAAD,EAAO;AAAEV,MAAAA,QAAF;AAAYS,MAAAA;AAAZ,KAAP;AADrB,GAAP;AAGD","sourcesContent":["import ENS from 'ethjs-ens'\nconst debug = require('debug')('aragon.ens')\n\n/**\n * Resolve an ens name or node\n *\n * @param {string} nameOrNode\n * @param {*} opts\n * @returns {Promise<string>}\n */\nexport function resolve (nameOrNode, opts = { provider: {} }) {\n  const isName = nameOrNode.includes('.')\n\n  // Stupid hack for ethjs-ens\n  if (!opts.provider.sendAsync) {\n    opts.provider.sendAsync = opts.provider.send\n  }\n\n  const ens = new ENS(opts)\n  if (isName) {\n    debug(`Looking up ENS name ${nameOrNode}`)\n    return ens.lookup(nameOrNode)\n  }\n\n  debug(`Looking up ENS node ${nameOrNode}`)\n  return ens.resolveAddressForNode(nameOrNode)\n}\n\nexport default function (provider, registryAddress) {\n  return {\n    resolve: (name) => resolve(name, { provider, registryAddress })\n  }\n}\n"],"file":"index.js"}