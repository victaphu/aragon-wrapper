{"version":3,"sources":["../../../src/core/proxy/index.test.js"],"names":["test","beforeEach","t","configurationStub","getConfiguration","sinon","stub","utilsStub","events","eventsUtils","ContractProxy","default","context","afterEach","always","restore","plan","eventEmitter","EventEmitter","contract","allEvents","web3Stub","eth","Contract","returns","instance","subscribe","event","deepEqual","foo","emit","amount","allEventEmitter","payFeeEventEmitter","allEventsStub","payFeeEventStub","PayFee","true","calledOnce","notCalled","eventCount","fail","initializationBlock","calledOnceWith","fromBlock","withArgs","configurationKeys","SUBSCRIPTION_EVENT_DELAY","startTime","Date","now","delayTime","Promise","resolve","toBlock","pastEventsStub","resolves","one","two","getPastEvents","pastEvents","calledWithExactly","is","length","calledWith"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport proxyquire from 'proxyquire'\nimport sinon from 'sinon'\nimport { EventEmitter } from 'events'\nimport * as configurationKeys from '../../configuration/keys'\nimport * as eventsUtils from '../../utils/events'\n\ntest.beforeEach(t => {\n  const configurationStub = {\n    getConfiguration: sinon.stub()\n  }\n  const utilsStub = {\n    events: eventsUtils\n  }\n  const ContractProxy = proxyquire('./index', {\n    '../../configuration': configurationStub,\n    '../../utils': utilsStub\n  }).default\n\n  t.context = {\n    ContractProxy,\n    configurationStub,\n    utilsStub\n  }\n})\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should get all the events', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(1)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const contract = {\n    events: {\n      allEvents: () => eventEmitter\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events()\n  // assert\n  events.subscribe(event => {\n    t.deepEqual(event, { foo: 'bar' })\n  })\n\n  eventEmitter.emit('data', { foo: 'bar' })\n})\n\ntest('should get only the requested events', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const contract = {\n    events: {\n      allEvents: () => eventEmitter\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events(['PayFee', 'PayService'])\n  // assert\n  events.subscribe(event => {\n    t.deepEqual(event.amount, 5)\n  })\n\n  eventEmitter.emit('data', { event: 'PayFee', amount: 5 })\n  eventEmitter.emit('data', { event: 'PaySomethingElse', amount: 10 })\n  eventEmitter.emit('data', { event: 'PayService', amount: 5 })\n})\n\ntest('should get only request the single event', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(4)\n  // arrange\n  const allEventEmitter = new EventEmitter()\n  const payFeeEventEmitter = new EventEmitter()\n  const allEventsStub = sinon.stub().returns(allEventEmitter)\n  const payFeeEventStub = sinon.stub().returns(payFeeEventEmitter)\n  const contract = {\n    events: {\n      allEvents: allEventsStub,\n      PayFee: payFeeEventStub\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events('PayFee')\n  // assert\n  t.true(payFeeEventStub.calledOnce)\n  t.true(allEventsStub.notCalled)\n\n  let eventCount = 0\n  events.subscribe(event => {\n    if (eventCount === 0) {\n      t.deepEqual(event.amount, 5)\n    } else if (eventCount === 1) {\n      t.deepEqual(event.amount, 10)\n    } else {\n      // Should only see it twice\n      t.fail()\n    }\n    ++eventCount\n  })\n\n  // Emit on both specific and all event emitters\n  allEventEmitter.emit('data', { event: 'PaySomethingElse', amount: 10 })\n  allEventEmitter.emit('data', { event: 'PayFee', amount: 5 })\n  payFeeEventEmitter.emit('data', { event: 'PayFee', amount: 5 })\n  allEventEmitter.emit('data', { event: 'PayFee', amount: 10 })\n  payFeeEventEmitter.emit('data', { event: 'PayFee', amount: 10 })\n  allEventEmitter.emit('data', { event: 'PayService', amount: 5 })\n})\n\ntest('should default the fromBlock to initializationBlock for requested events', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(2)\n  // arrange\n  const initializationBlock = 5\n  const eventEmitter = new EventEmitter()\n  const allEventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: allEventsStub\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub, { initializationBlock })\n  // act\n  const events = instance.events()\n  // assert\n  t.true(allEventsStub.calledOnceWith({ fromBlock: initializationBlock }))\n  events.subscribe(event => {\n    t.deepEqual(event, { foo: 'bar' })\n  })\n\n  eventEmitter.emit('data', { foo: 'bar' })\n})\n\ntest('should use the correct options for requested events', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(2)\n  // arrange\n  const fromBlock = 10\n  const eventEmitter = new EventEmitter()\n  const allEventsStub = sinon.stub().returns(eventEmitter)\n  const contract = {\n    events: {\n      allEvents: allEventsStub\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events(null, { fromBlock })\n  // assert\n  t.true(allEventsStub.calledOnceWith({ fromBlock }))\n  events.subscribe(event => {\n    t.deepEqual(event, { foo: 'bar' })\n  })\n\n  eventEmitter.emit('data', { foo: 'bar' })\n})\n\ntest('should not apply a delay to events if not configured', (t) => {\n  const { ContractProxy, configurationStub } = t.context\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const contract = {\n    events: {\n      allEvents: () => eventEmitter\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n\n  // Set no delay\n  configurationStub.getConfiguration.withArgs(configurationKeys.SUBSCRIPTION_EVENT_DELAY).returns(0)\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events()\n  // assert\n  const startTime = Date.now()\n\n  events.subscribe(event => {\n    t.deepEqual(event, { foo: 'bar' })\n    // Hard to say exactly how much time this will take, but 20ms seems safe\n    // (this should be immediate)\n    t.true((Date.now() - startTime) < 20)\n  })\n\n  eventEmitter.emit('data', { foo: 'bar' })\n})\n\ntest('should apply a delay to events if configured', (t) => {\n  const { ContractProxy, configurationStub } = t.context\n  const delayTime = 1000\n\n  t.plan(2)\n  // arrange\n  const eventEmitter = new EventEmitter()\n  const contract = {\n    events: {\n      allEvents: () => eventEmitter\n    }\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n\n  // Set a delay\n  configurationStub.getConfiguration.withArgs(configurationKeys.SUBSCRIPTION_EVENT_DELAY).returns(delayTime)\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.events()\n  // assert\n  // Since we've added the delay, we need to tell ava to wait until we're done subscribing\n  return new Promise(resolve => {\n    const startTime = Date.now()\n    events.subscribe(event => {\n      t.deepEqual(event, { foo: 'bar' })\n      t.true((Date.now() - startTime) > delayTime)\n      resolve()\n    })\n\n    eventEmitter.emit('data', { foo: 'bar' })\n  })\n})\n\ntest('should use the correct options for requested past events with fromBlock and toBlock ', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(4)\n  // arrange\n  const fromBlock = 10\n  const toBlock = 15\n\n  const pastEventsStub = sinon.stub().resolves([{ one: 1 }, { two: 2 }])\n\n  const contract = {\n    getPastEvents: pastEventsStub\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.pastEvents(null, { fromBlock, toBlock })\n  // assert\n  t.true(pastEventsStub.calledWithExactly('allEvents', { fromBlock, toBlock }))\n\n  events.subscribe(events => {\n    t.is(events.length, 2)\n    t.deepEqual(events[0], { one: 1 })\n    t.deepEqual(events[1], { two: 2 })\n  })\n  return events // return observable for ava to wait for its completion\n})\n\ntest('should use the correct options for requested past events with toBlock and initializationBlock set ', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(1)\n  // arrange\n  const toBlock = 500\n  const initializationBlock = 20\n\n  const pastEventsStub = sinon.stub().resolves([{ one: 1 }, { two: 2 }])\n\n  const contract = {\n    getPastEvents: pastEventsStub\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub, { initializationBlock })\n  // act\n  instance.pastEvents(null, { toBlock })\n  // assert\n  t.true(pastEventsStub.calledWithExactly('allEvents', { fromBlock: initializationBlock, toBlock }))\n})\n\ntest('should filter past events correctly when more than one eventName is passed', (t) => {\n  const { ContractProxy } = t.context\n\n  t.plan(4)\n  // arrange\n  const pastEventsStub = sinon.stub().resolves([\n    { event: 'Orange', amount: 16 },\n    { event: 'Apple', amount: 10 },\n    { event: 'Pear', amount: 5 }\n  ])\n\n  const contract = {\n    getPastEvents: pastEventsStub\n  }\n\n  const web3Stub = {\n    eth: {\n      Contract: sinon.stub().returns(contract)\n    }\n  }\n  const instance = new ContractProxy(null, null, web3Stub)\n  // act\n  const events = instance.pastEvents(['Orange', 'Pear'])\n  // assert\n  t.true(pastEventsStub.calledWith('allEvents'))\n\n  events.subscribe(events => {\n    t.is(events.length, 2)\n    t.deepEqual(events[0], { event: 'Orange', amount: 16 })\n    t.deepEqual(events[1], { event: 'Pear', amount: 5 })\n  })\n\n  return events // return observable for ava to wait for its completion\n})\n"],"file":"index.test.js"}