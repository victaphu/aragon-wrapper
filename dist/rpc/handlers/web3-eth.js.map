{"version":3,"sources":["../../../src/rpc/handlers/web3-eth.js"],"names":["METHOD_WHITELIST","Set","request","proxy","wrapper","web3","method","params","has","Promise","resolve","eth","reject","Error"],"mappings":";;;;;;AAAA,MAAMA,gBAAgB,GAAG,IAAIC,GAAJ,CAAQ,CAC/B,aAD+B,EAE/B,aAF+B,EAG/B,YAH+B,EAI/B,UAJ+B,EAK/B,gBAL+B,EAM/B,0BAN+B,EAO/B,SAP+B,EAQ/B,aAR+B,EAS/B,cAT+B,EAU/B,aAV+B,EAW/B,aAX+B,EAY/B,aAZ+B,EAa/B,oBAb+B,EAc/B,cAd+B,EAe/B,gBAf+B,EAgB/B,qBAhB+B,EAiB/B,yBAjB+B,EAkB/B,uBAlB+B,EAmB/B,SAnB+B,EAoB/B,UApB+B,EAqB/B,UArB+B,EAsB/B,WAtB+B,CAAR,CAAzB;;AAyBe,wBAAgBC,OAAhB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AACtD,QAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;AACA,QAAM,CACJC,MADI,EAEJ,GAAGC,MAFC,IAGFL,OAAO,CAACK,MAHZ;AAKA,SAAOP,gBAAgB,CAACQ,GAAjB,CAAqBF,MAArB,IACHG,OAAO,CAACC,OAAR,CAAgBL,IAAI,CAACM,GAAL,CAASL,MAAT,EAAiB,GAAGC,MAApB,CAAhB,CADG,GAEHE,OAAO,CAACG,MAAR,CACA,IAAIC,KAAJ,CAAW,0BAAyBP,MAAO,sBAA3C,CADA,CAFJ;AAKD","sourcesContent":["const METHOD_WHITELIST = new Set([\n  'estimateGas',\n  'getAccounts',\n  'getBalance',\n  'getBlock',\n  'getBlockNumber',\n  'getBlockTransactionCount',\n  'getCode',\n  'getCoinbase',\n  'getCompilers',\n  'getGasPrice',\n  'getHashrate',\n  'getPastLogs',\n  'getProtocolVersion',\n  'getStorageAt',\n  'getTransaction',\n  'getTransactionCount',\n  'getTransactionFromBlock',\n  'getTransactionReceipt',\n  'getWork',\n  'getUncle',\n  'isMining',\n  'isSyncing'\n])\n\nexport default async function (request, proxy, wrapper) {\n  const web3 = wrapper.web3\n  const [\n    method,\n    ...params\n  ] = request.params\n\n  return METHOD_WHITELIST.has(method)\n    ? Promise.resolve(web3.eth[method](...params))\n    : Promise.reject(\n      new Error(`Given web3.eth method (${method}) is not whitelisted`)\n    )\n}\n"],"file":"web3-eth.js"}