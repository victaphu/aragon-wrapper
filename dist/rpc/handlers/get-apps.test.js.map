{"version":3,"sources":["../../../src/rpc/handlers/get-apps.test.js"],"names":["test","afterEach","always","sinon","restore","t","plan","initialApps","appId","kernelAddress","contractAddress","abi","roles","isForwarder","name","proxyAddress","icons","src","appsMock","BehaviorSubject","identifiersMock","requestStub","params","proxyStub","wrapperStub","apm","getContentPath","content","path","apps","appIdentifiers","result","expectedInitialApps","appAddress","appImplementationAddress","identifier","expectedEndApps","concat","emitIndex","subscribe","value","deepEqual","fail","endApps","next","icon","expectedApps","currentAppAddress","initialApp","address","endApp"],"mappings":"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","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport { of, BehaviorSubject } from 'rxjs'\n\nimport getApps from './get-apps'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should return a subscription for the entire app list if observing all', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: '0x456',\n    icons: [{ src: 'icon_link' }]\n  }]\n  const appsMock = new BehaviorSubject(initialApps)\n  const identifiersMock = of({\n    '0x456': 'cool identifier',\n    '0x789': 'voting identifier'\n  })\n\n  const requestStub = {\n    params: ['observe', 'all']\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  const expectedInitialApps = [{\n    abi: 'abi for coolApp',\n    appAddress: '0x456',\n    appId: 'coolApp',\n    appImplementationAddress: '0xcoolApp',\n    identifier: 'cool identifier',\n    isForwarder: false,\n    kernelAddress: '0x123',\n    name: 'Cool App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for coolApp'\n  }]\n  const expectedEndApps = [].concat(expectedInitialApps, {\n    abi: 'abi for votingApp',\n    appAddress: '0x789',\n    appId: 'votingApp',\n    appImplementationAddress: '0xvotingApp',\n    identifier: 'voting identifier',\n    isForwarder: true,\n    kernelAddress: '0x123',\n    name: 'Voting App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for votingApp'\n  })\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, expectedInitialApps)\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, expectedEndApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // We need apps' second emission to fire after the identifiers have emitted,\n  // so that the combineLatest doesn't skip the initial value\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    proxyAddress: '0x789',\n    icons: [{ src: 'icon_link' }]\n  })\n  appsMock.next(endApps)\n})\n\n// Test backwards compatibility with initial RPC API (no parameters passed)\ntest('should return a subscription for the entire unmodified app list via initial RPC API', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    icon: 'icon link',\n    proxyAddress: '0x456'\n  }]\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    icon: 'icon link',\n    proxyAddress: '0x789'\n  })\n  const appsMock = of(initialApps, endApps)\n\n  const requestStub = {\n    params: []\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apps: appsMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, initialApps)\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, endApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n})\n\ntest('should return the initial value for the entire app list if getting all', async (t) => {\n  t.plan(1)\n\n  // arrange\n  const initialApps = [{\n    appId: 'coolApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xcoolApp',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: '0x456',\n    icons: [{ src: 'icon_link' }]\n  }]\n  const appsMock = new BehaviorSubject(initialApps)\n  const identifiersMock = of({\n    '0x456': 'cool identifier',\n    '0x789': 'voting identifier'\n  })\n\n  const requestStub = {\n    params: ['get', 'all']\n  }\n  const proxyStub = {}\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  const expectedApps = [{\n    abi: 'abi for coolApp',\n    appAddress: '0x456',\n    appId: 'coolApp',\n    appImplementationAddress: '0xcoolApp',\n    identifier: 'cool identifier',\n    isForwarder: false,\n    kernelAddress: '0x123',\n    name: 'Cool App',\n    icons: [{ src: 'url/icon_link' }],\n    roles: 'roles for coolApp'\n  }]\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, expectedApps)\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // Even though this is filtered out, we need apps' second emission to fire after the identifiers\n  // have emitted, so that the combineLatest doesn't skip the initial value\n  const endApps = [].concat(initialApps, {\n    appId: 'votingApp',\n    kernelAddress: '0x123',\n    contractAddress: '0xvotingApp',\n    abi: 'abi for votingApp',\n    roles: 'roles for votingApp',\n    isForwarder: true,\n    name: 'Voting App',\n    proxyAddress: '0x789',\n    icons: [{ src: 'icon_link' }]\n  })\n  appsMock.next(endApps)\n})\n\ntest('should return a subscription for just the current app if observing current', async (t) => {\n  t.plan(2)\n\n  // arrange\n  const currentAppAddress = '0x456'\n  const initialApp = {\n    appId: 'coolApp',\n    contractAddress: '0xcoolApp',\n    kernelAddress: '0x123',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: currentAppAddress,\n    icons: [{ src: 'icon_link' }]\n  }\n  const appsMock = new BehaviorSubject([initialApp])\n  const identifiersMock = of({\n    '0x456': 'cool identifier'\n  })\n\n  const requestStub = {\n    params: ['observe', 'current']\n  }\n  const proxyStub = {\n    address: currentAppAddress\n  }\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else if (emitIndex === 1) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'new coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // We need apps' second emission to fire after the identifiers have emitted,\n  // so that the combineLatest doesn't skip the initial value\n  const endApp = {\n    ...initialApp,\n    appId: 'new coolApp'\n  }\n  appsMock.next([\n    // This extra app should be filtered out\n    {\n      appId: 'votingApp',\n      kernelAddress: '0x123',\n      contractAddress: '0xvotingApp',\n      abi: 'abi for votingApp',\n      roles: 'roles for votingApp',\n      isForwarder: true,\n      name: 'Voting App',\n      proxyAddress: '0x789',\n      icons: [{ src: 'icon_link' }]\n    },\n    endApp\n  ])\n})\n\ntest('should return the initial value for just the current app if getting current', async (t) => {\n  t.plan(1)\n\n  // arrange\n  const currentAppAddress = '0x456'\n  const initialApp = {\n    appId: 'coolApp',\n    contractAddress: '0xcoolApp',\n    kernelAddress: '0x123',\n    abi: 'abi for coolApp',\n    roles: 'roles for coolApp',\n    isForwarder: false,\n    name: 'Cool App',\n    proxyAddress: currentAppAddress,\n    icons: [{ src: 'icon_link' }]\n  }\n  const endApp = {\n    ...initialApp,\n    appId: 'new coolApp'\n  }\n  const appsMock = new BehaviorSubject([initialApp])\n  const identifiersMock = of({\n    '0x456': 'cool identifier'\n  })\n\n  const requestStub = {\n    params: ['get', 'current']\n  }\n  const proxyStub = {\n    address: currentAppAddress\n  }\n  const wrapperStub = {\n    apm: {\n      getContentPath: (content, path) => `url/${path}`\n    },\n    apps: appsMock,\n    appIdentifiers: identifiersMock\n  }\n\n  // act\n  const result = await getApps(requestStub, proxyStub, wrapperStub)\n\n  // assert\n  let emitIndex = 0\n  result.subscribe(value => {\n    if (emitIndex === 0) {\n      t.deepEqual(value, {\n        abi: 'abi for coolApp',\n        appAddress: currentAppAddress,\n        appId: 'coolApp',\n        appImplementationAddress: '0xcoolApp',\n        identifier: 'cool identifier',\n        isForwarder: false,\n        kernelAddress: '0x123',\n        name: 'Cool App',\n        icons: [{ src: 'url/icon_link' }],\n        roles: 'roles for coolApp'\n      })\n    } else {\n      t.fail('too many emissions')\n    }\n\n    emitIndex++\n  })\n\n  // Even though this is filtered out, we need apps' second emission to fire after the identifiers\n  // have emitted, so that the combineLatest doesn't skip the initial value\n  appsMock.next([endApp])\n})\n"],"file":"get-apps.test.js"}