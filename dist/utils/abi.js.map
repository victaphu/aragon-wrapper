{"version":3,"sources":["../../src/utils/abi.js"],"names":["findMethodAbiFragment","abi","methodSignature","find","method","type","fullMethodSignature","Boolean","includes","methodAbiFragment","filter","name","currentParameterTypes","inputs","map","currentMethodSignature","join"],"mappings":";;;;;;;AAAO,SAASA,qBAAT,CAAgCC,GAAhC,EAAqCC,eAArC,EAAsD;AAC3D,MAAIA,eAAe,KAAK,UAAxB,EAAoC;AAClC;AACA,WAAOD,GAAG,CAACE,IAAJ,CAASC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,UAAnC,CAAP;AACD,GAJ0D,CAM3D;;;AACA,QAAMC,mBAAmB,GACvBC,OAAO,CAACL,eAAD,CAAP,IAA4BA,eAAe,CAACM,QAAhB,CAAyB,GAAzB,CAA5B,IAA6DN,eAAe,CAACM,QAAhB,CAAyB,GAAzB,CAD/D;AAGA,QAAMC,iBAAiB,GAAGR,GAAG,CAC1BS,MADuB,CAChBN,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,UADV,EAEvBF,IAFuB,CAGrBC,MAAD,IAAY;AACV;AACA,QAAI,CAACE,mBAAL,EAA0B;AACxB,aAAOF,MAAM,CAACO,IAAP,KAAgBT,eAAvB;AACD;;AAED,UAAMU,qBAAqB,GAAGR,MAAM,CAACS,MAAP,CAAcC,GAAd,CAAkB,CAAC;AAAET,MAAAA;AAAF,KAAD,KAAcA,IAAhC,CAA9B;AACA,UAAMU,sBAAsB,GAAI,GAAEX,MAAM,CAACO,IAAK,IAAGC,qBAAqB,CAACI,IAAtB,CAA2B,GAA3B,CAAgC,GAAjF;AACA,WAAOD,sBAAsB,KAAKb,eAAlC;AACD,GAZqB,CAA1B;AAeA,SAAOO,iBAAP;AACD","sourcesContent":["export function findMethodAbiFragment (abi, methodSignature) {\n  if (methodSignature === 'fallback') {\n    // Note that fallback functions in the ABI do not contain a `name` or `inputs` key\n    return abi.find(method => method.type === 'fallback')\n  }\n\n  // Is the given method a full signature, e.g. 'foo(arg1,arg2,...)'\n  const fullMethodSignature =\n    Boolean(methodSignature) && methodSignature.includes('(') && methodSignature.includes(')')\n\n  const methodAbiFragment = abi\n    .filter(method => method.type === 'function')\n    .find(\n      (method) => {\n        // If the full signature isn't given, just find the first overload declared\n        if (!fullMethodSignature) {\n          return method.name === methodSignature\n        }\n\n        const currentParameterTypes = method.inputs.map(({ type }) => type)\n        const currentMethodSignature = `${method.name}(${currentParameterTypes.join(',')})`\n        return currentMethodSignature === methodSignature\n      }\n    )\n\n  return methodAbiFragment\n}\n"],"file":"abi.js"}