{"version":3,"sources":["../../src/utils/events.js"],"names":["getEventNames","eventNames","Array","isArray","getPastEventsByBatch","options","contract","eventName","res","opts","batchSize","process","env","REACT_APP_PAST_EVENTS_BATCH_SIZE","i","fromBlock","toBlock","arr","getPastEvents","length","concat"],"mappings":";;;;;;;;;;;;;;;;AAAO,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AACxC;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,CAAC,WAAD,CAAP;AACD,GAJuC,CAMxC;AACA;;;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC;AAC9BA,IAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACD;;AAED,SAAOA,UAAP;AACD,C,CAED;;;AACO,eAAeG,oBAAf,CAAoC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAApC,EAAsE;AAC3E,MAAIC,GAAG,GAAG,EAAV;;AACA,QAAMC,IAAI,qBAAQJ,OAAR,CAAV;;AACA,QAAMK,SAAS,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,gCAA/B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAACT,OAAO,CAACU,SAAtB,EAAiCD,CAAC,GAAG,CAACT,OAAO,CAACW,OAA9C,EAAuDF,CAAC,IAAIJ,SAA5D,EAAuE;AACrED,IAAAA,IAAI,CAACM,SAAL,GAAiBD,CAAjB;AACA,UAAME,OAAO,GAAGF,CAAC,GAAGJ,SAAJ,GAAgB,CAAhC;;AAEA,QAAIM,OAAO,GAAGX,OAAO,CAACW,OAAtB,EAA+B;AAC7BP,MAAAA,IAAI,CAACO,OAAL,GAAeX,OAAO,CAACW,OAAvB;AACD,KAFD,MAGK;AACHP,MAAAA,IAAI,CAACO,OAAL,GAAeA,OAAf;AACD;;AAED,UAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,aAAT,CAAuBX,SAAvB,EAAkCE,IAAlC,CAAlB;AACA,QAAIQ,GAAG,IAAIA,GAAG,CAACE,MAAf,EACEX,GAAG,GAAGA,GAAG,CAACY,MAAJ,CAAWH,GAAX,CAAN;AACH;;AAED,SAAOT,GAAP;AACD","sourcesContent":["export function getEventNames(eventNames) {\n  // Get all events\n  if (!eventNames) {\n    return ['allEvents']\n  }\n\n  // Convert `eventNames` to an array in order to\n  // support `.events(name)` and `.events([a, b])`\n  if (!Array.isArray(eventNames)) {\n    eventNames = [eventNames]\n  }\n\n  return eventNames\n}\n\n// get all events by blocks (configured from REACT_APP_PAST_EVENTS_BATCH_SIZE environment variable)\nexport async function getPastEventsByBatch({ options, contract, eventName }) {\n  let res = []\n  const opts = { ...options }\n  const batchSize = +process.env.REACT_APP_PAST_EVENTS_BATCH_SIZE\n\n  for (let i = +options.fromBlock; i < +options.toBlock; i += batchSize) {\n    opts.fromBlock = i\n    const toBlock = i + batchSize - 1\n    \n    if (toBlock > options.toBlock) {\n      opts.toBlock = options.toBlock\n    }\n    else {\n      opts.toBlock = toBlock\n    }\n\n    const arr = await contract.getPastEvents(eventName, opts)\n    if (arr && arr.length)\n      res = res.concat(arr)\n  }\n\n  return res;\n}"],"file":"events.js"}