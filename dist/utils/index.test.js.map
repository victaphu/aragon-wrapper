{"version":3,"sources":["../../src/utils/index.test.js"],"names":["test","afterEach","always","sinon","restore","t","bobAddress","bobPermissions","permissions","utils","makeAddressMapProxy","is","undefined","dianeAddress","annieAddress","rainiAddress","dianePermissions","anniePermissions","rainiPermissions"],"mappings":";;;;AAAA;;AACA;;AACA;;;;;;AAEAA,aAAKC,SAAL,CAAeC,MAAf,CAAsB,MAAM;AAC1BC,iBAAMC,OAAN;AACD,CAFD;;AAIA,kBAAK,yDAAL,EAAgE,MAAOC,CAAP,IAAa;AAC3E;AACA,QAAMC,UAAU,GAAG,4CAAnB;AACA,QAAMC,cAAc,GAAG,CAAC,MAAD,EAAS,OAAT,CAAvB,CAH2E,CAI3E;;AACA,QAAMC,WAAW,GAAGC,KAAK,CAACC,mBAAN,CAA0B,EAA1B,CAApB;AACAF,EAAAA,WAAW,CAACF,UAAD,CAAX,GAA0BC,cAA1B,CAN2E,CAO3E;;AACAF,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgED,cAAhE;AACAF,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgED,cAAhE;AACAF,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgED,cAAhE,EAV2E,CAW3E;AACA;;AACAF,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEI,SAAhE;AACAP,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEI,SAAhE;AACAP,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEI,SAAhE;AACD,CAhBD;AAkBA,kBAAK,mFAAL,EAA0F,MAAOP,CAAP,IAAa;AACrG;AACA,QAAMQ,YAAY,GAAG,4CAArB;AACA,QAAMC,YAAY,GAAG,4CAArB;AACA,QAAMC,YAAY,GAAG,4CAArB;AACA,QAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,CAAzB;AACA,QAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,MAAT,CAAzB;AACA,QAAMC,gBAAgB,GAAG,CAAC,OAAD,EAAU,QAAV,CAAzB,CAPqG,CAQrG;;AACA,QAAMV,WAAW,GAAGC,KAAK,CAACC,mBAAN,CAA0B;AAC5C,KAACG,YAAD,GAAgBG,gBAD4B;AAE5C,KAACF,YAAD,GAAgBG,gBAF4B;AAG5C,KAACF,YAAD,GAAgBG;AAH4B,GAA1B,CAApB,CATqG,CAerG;;AACAb,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEQ,gBAAhE;AACAX,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEQ,gBAAhE;AACAX,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEQ,gBAAhE;AAEAX,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgES,gBAAhE;AACAZ,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgES,gBAAhE;AAEAZ,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEU,gBAAhE;AACAb,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEU,gBAAhE;AACAb,EAAAA,CAAC,CAACM,EAAF,CAAKH,WAAW,CAAC,4CAAD,CAAhB,EAAgEU,gBAAhE;AACD,CA1BD","sourcesContent":["import test from 'ava'\nimport sinon from 'sinon'\nimport * as utils from './index'\n\ntest.afterEach.always(() => {\n  sinon.restore()\n})\n\ntest('should enhance an object to lookup eth addresses easier', async (t) => {\n  // arrange\n  const bobAddress = '0x0000000000000000000000000000000000000aBc'\n  const bobPermissions = ['read', 'write']\n  // act\n  const permissions = utils.makeAddressMapProxy({})\n  permissions[bobAddress] = bobPermissions\n  // assert\n  t.is(permissions['0x0000000000000000000000000000000000000ABC'], bobPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000abc'], bobPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000aBc'], bobPermissions)\n  // addresses with invalid checksums\n  // (the checksum is checked if the address has both upper and lowercase letters)\n  t.is(permissions['0x0000000000000000000000000000000000000aBC'], undefined)\n  t.is(permissions['0x0000000000000000000000000000000000000abC'], undefined)\n  t.is(permissions['0x0000000000000000000000000000000000000ABc'], undefined)\n})\n\ntest('should allow the proxy to be initialized with an object containing any cased keys', async (t) => {\n  // arrange\n  const dianeAddress = '0x0000000000000000000000000000000000000ABC'\n  const annieAddress = '0x0000000000000000000000000000000000000cde'\n  const rainiAddress = '0x0000000000000000000000000000000000000eED'\n  const dianePermissions = ['read', 'write']\n  const anniePermissions = ['read', 'sing']\n  const rainiPermissions = ['dance', 'modify']\n  // act\n  const permissions = utils.makeAddressMapProxy({\n    [dianeAddress]: dianePermissions,\n    [annieAddress]: anniePermissions,\n    [rainiAddress]: rainiPermissions\n  })\n\n  // assert\n  t.is(permissions['0x0000000000000000000000000000000000000ABC'], dianePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000abc'], dianePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000aBc'], dianePermissions)\n\n  t.is(permissions['0x0000000000000000000000000000000000000CDE'], anniePermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000cde'], anniePermissions)\n\n  t.is(permissions['0x0000000000000000000000000000000000000EED'], rainiPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000eed'], rainiPermissions)\n  t.is(permissions['0x0000000000000000000000000000000000000EeD'], rainiPermissions)\n})\n"],"file":"index.test.js"}