{"version":3,"sources":["../../src/utils/transactions.js"],"names":["DEFAULT_GAS_FUZZ_FACTOR","PREVIOUS_BLOCK_GAS_LIMIT_FACTOR","applyPretransaction","directTransaction","web3","token","from","to","address","tokenAddress","value","tokenValue","spender","approveSpender","erc20ABI","tokenContract","eth","Contract","balance","methods","balanceOf","call","tokenValueBN","lt","Error","allowance","allowanceBN","gt","console","warn","tokenApproveTransaction","data","approve","encodeABI","pretransaction","applyForwardingFeePretransaction","forwardingTransaction","forwarder","forwardFee","feeDetails","amount","feeResult","err","toString","createDirectTransaction","sender","destination","methodAbiFragment","params","paramsIncludesTransactionOptions","type","length","inputs","transactionOptions","options","pop","abi","encodeFunctionCall","createDirectTransactionForApp","app","methodSignature","proxyAddress","createForwarderTransactionBuilder","forwardMethod","forwarderAddress","script","getRecommendedGasLimit","estimatedGasLimit","gasFuzzFactor","latestBlock","getBlock","latestBlockGasLimit","gasLimit","upperGasLimit","Math","round","bufferedGasLimit"],"mappings":"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","sourcesContent":["import { toBN } from 'web3-utils'\nimport { getAbi } from '../interfaces'\nimport { findMethodAbiFragment } from './abi'\n\nconst DEFAULT_GAS_FUZZ_FACTOR = 1.5\nconst PREVIOUS_BLOCK_GAS_LIMIT_FACTOR = 0.95\n\nexport async function applyPretransaction (directTransaction, web3) {\n  // Token allowance pretransaction\n  if (directTransaction.token) {\n    const {\n      from,\n      to,\n      token: { address: tokenAddress, value: tokenValue, spender }\n    } = directTransaction\n\n    // Approve the transaction destination unless an spender is passed to approve a different contract\n    const approveSpender = spender || to\n\n    const erc20ABI = getAbi('standard/ERC20')\n    const tokenContract = new web3.eth.Contract(erc20ABI, tokenAddress)\n    const balance = await tokenContract.methods.balanceOf(from).call()\n\n    const tokenValueBN = toBN(tokenValue)\n\n    if (toBN(balance).lt(tokenValueBN)) {\n      throw new Error(`Balance too low. ${from} balance of ${tokenAddress} token is ${balance} (attempting to send ${tokenValue})`)\n    }\n\n    const allowance = await tokenContract.methods.allowance(from, approveSpender).call()\n    const allowanceBN = toBN(allowance)\n\n    // If allowance is already greater than or equal to amount, there is no need to do an approve transaction\n    if (allowanceBN.lt(tokenValueBN)) {\n      if (allowanceBN.gt(toBN(0))) {\n        // TODO: Actually handle existing approvals (some tokens fail when the current allowance is not 0)\n        console.warn(`${from} already approved ${approveSpender}. In some tokens, approval will fail unless the allowance is reset to 0 before re-approving again.`)\n      }\n\n      const tokenApproveTransaction = {\n        // TODO: should we include transaction options?\n        from,\n        to: tokenAddress,\n        data: tokenContract.methods.approve(approveSpender, tokenValue).encodeABI()\n      }\n\n      directTransaction.pretransaction = tokenApproveTransaction\n      delete directTransaction.token\n    }\n  }\n\n  return directTransaction\n}\n\nexport async function applyForwardingFeePretransaction (forwardingTransaction, web3) {\n  const { to: forwarder, from } = forwardingTransaction\n\n  // Check if a token approval pretransaction is needed due to the forwarder requiring a fee\n  const forwardFee = new web3.eth.Contract(\n    getAbi('aragon/ForwarderFee'),\n    forwarder\n  ).methods['forwardFee']\n\n  const feeDetails = { amount: toBN(0) }\n  try {\n    // Passing the EOA as `msg.sender` to the forwardFee call is useful for use cases where the fee differs relative to the account\n    const feeResult = await forwardFee().call({ from }) // forwardFee() returns (address, uint256)\n    feeDetails.tokenAddress = feeResult[0]\n    feeDetails.amount = toBN(feeResult[1])\n  } catch (err) {\n    // Not all forwarders implement the `forwardFee()` interface\n  }\n\n  if (feeDetails.tokenAddress && feeDetails.amount.gt(toBN(0))) {\n    // Needs a token approval pretransaction\n    forwardingTransaction.token = {\n      address: feeDetails.tokenAddress,\n      spender: forwarder, // since it's a forwarding transaction, always show the real spender\n      value: feeDetails.amount.toString()\n    }\n  }\n\n  return applyPretransaction(forwardingTransaction, web3)\n}\n\nexport async function createDirectTransaction (sender, destination, methodAbiFragment, params, web3) {\n  let paramsIncludesTransactionOptions = false\n  if (methodAbiFragment.type === 'fallback') {\n    if (params.length > 1) {\n      throw new Error('Could not create transaction to fallback function due to too many parameters', params)\n    }\n\n    paramsIncludesTransactionOptions = params.length === 1\n  } else if (\n    methodAbiFragment.inputs.length + 1 === params.length &&\n    typeof params[params.length - 1] === 'object'\n  ) {\n    paramsIncludesTransactionOptions = true\n  }\n\n  let transactionOptions = {}\n  if (paramsIncludesTransactionOptions) {\n    const options = params.pop()\n    transactionOptions = { ...transactionOptions, ...options }\n  }\n\n  // The direct transaction we eventually want to perform\n  const directTransaction = {\n    ...transactionOptions, // Options are overwriten by the values below\n    from: sender,\n    to: destination,\n    data: web3.eth.abi.encodeFunctionCall(methodAbiFragment, params)\n  }\n\n  // Add any pretransactions specified\n  return applyPretransaction(directTransaction, web3)\n}\n\nexport async function createDirectTransactionForApp (sender, app, methodSignature, params, web3) {\n  if (!app) {\n    throw new Error('Could not create transaction due to missing app artifact')\n  }\n\n  const { proxyAddress: destination } = app\n\n  if (!app.abi) {\n    throw new Error(`No ABI specified in artifact for ${destination}`)\n  }\n\n  const methodAbiFragment = findMethodAbiFragment(app.abi, methodSignature)\n  if (!methodAbiFragment) {\n    throw new Error(`${methodSignature} not found on ABI for ${destination}`)\n  }\n\n  return createDirectTransaction(sender, destination, methodAbiFragment, params, web3)\n}\n\nexport function createForwarderTransactionBuilder (sender, directTransaction, web3) {\n  const forwardMethod = new web3.eth.Contract(\n    getAbi('aragon/Forwarder')\n  ).methods['forward']\n\n  return (forwarderAddress, script) => (\n    {\n      ...directTransaction, // Options are overwriten by the values below\n      from: sender,\n      to: forwarderAddress,\n      data: forwardMethod(script).encodeABI()\n    }\n  )\n}\n\nexport async function getRecommendedGasLimit (web3, estimatedGasLimit, { gasFuzzFactor = DEFAULT_GAS_FUZZ_FACTOR } = {}) {\n  const latestBlock = await web3.eth.getBlock('latest')\n  const latestBlockGasLimit = latestBlock.gasLimit\n\n  const upperGasLimit = Math.round(latestBlockGasLimit * PREVIOUS_BLOCK_GAS_LIMIT_FACTOR)\n  const bufferedGasLimit = Math.round(estimatedGasLimit * gasFuzzFactor)\n\n  if (estimatedGasLimit > upperGasLimit) {\n    // TODO: Consider whether we should throw an error rather than returning with a high gas limit\n    return estimatedGasLimit\n  } else if (bufferedGasLimit < upperGasLimit) {\n    return bufferedGasLimit\n  } else {\n    return upperGasLimit\n  }\n}\n"],"file":"transactions.js"}